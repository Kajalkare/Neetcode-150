bool isValid(int row, int col, vector<vector<char>>& board, char ch)
{
	for(int i=0; i<9; i++)
	{
		if(i != col && board[row][i] == ch)
		{
			return false;
		}
		if(i != row && board[i][col] == ch)
		{
			return false;
		}

		int newRow = 3 * (row/3) + (i/3);
		int newCol = 3 * (col/3) + (i%3);
		if(row != newRow && col != newCol && board[newRow][newCol] == ch)
		{
			return false;
		}
	}
	return true;
}


bool solve(vector<vector<char>>& board)
{
	for(int i=0; i<9; i++)
	{
		for(int j=0; j<9; j++)
		{
			if(board[i][j] != '.')
			{
				if(!isValid(i, j, board, board[i][j]))
				{
					return false;
				}
			}
		}
	}
	return true;
}

bool isValidSudoku(vector<vector<char>>& board) {
	return solve(board);
}